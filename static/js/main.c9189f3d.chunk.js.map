{"version":3,"sources":["actions/types.js","reducers/logReducer.js","reducers/techReducer.js","reducers/index.js","store.js","actions/logActions.js","components/layout/SearchBar.js","components/logs/LogItem.js","components/layout/Preloader.js","components/logs/Logs.js","components/layout/AddBtn.js","actions/techActions.js","components/techs/TechSelectOptions.js","components/logs/AddLogModal.js","components/logs/EditLogModal.js","components/techs/AddTechModal.js","components/techs/TechItem.js","components/techs/TechListModal.js","App.js","index.js"],"names":["GET_LOGS","ADD_LOG","DELETE_LOG","SET_CURRENT","UPDATE_LOG","SET_LOADING","LOGS_ERROR","SEARCH_LOGS","GET_TECHS","ADD_TECH","DELETE_TECH","TECHS_ERROR","initialState","logs","current","loading","error","techs","combineReducers","log","state","action","type","payload","map","id","filter","console","tech","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","setLoading","connect","searchLogs","text","dispatch","a","fetch","response","json","data","statusText","useRef","style","marginBottom","className","ref","placeholder","onChange","e","value","htmlFor","setCurrent","deleteLog","method","href","attention","onClick","message","format","date","M","toast","html","loadingStyle","position","top","left","transform","Preloader","class","headerStyle","fontWeight","fontSize","getLogs","useEffect","length","AddBtn","getTechs","firstName","lastName","modalStyle","width","height","addLog","headers","body","JSON","stringify","useState","setMessage","setTech","setAttention","name","target","disabled","checked","newLog","Date","updateLog","udtLog","AddTechModal","addTech","setFirstName","setLastName","propType","addTect","PropTypes","func","isRequired","newTech","deleteTech","tId","App","AutoInit","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c9189f3d.chunk.js","sourcesContent":["export const GET_LOGS = 'GET_LOGS';\r\nexport const ADD_LOG = 'ADD_LOG';\r\nexport const DELETE_LOG = 'DELETE_LOG';\r\nexport const SET_CURRENT = 'SET_CURRENT';\r\nexport const CLEAR_CURRENT = 'CLEAR_CURRENT';\r\nexport const UPDATE_LOG = 'UPDATE_LOG';\r\nexport const CLEAR_LOGS = 'CLEAR_LOGS';\r\nexport const SET_LOADING = 'SET_LOADING';\r\nexport const LOGS_ERROR = 'LOGS_ERROR';\r\nexport const SEARCH_LOGS = 'SEARCH_LOGS';\r\nexport const GET_TECHS = 'GET_TECHS';\r\nexport const ADD_TECH = 'ADD_TECH';\r\nexport const DELETE_TECH = 'DELETE_TECH';\r\nexport const TECHS_ERROR = 'TECHS_ERROR';\r\n","import {\r\n  ADD_LOG,\r\n  DELETE_LOG,\r\n  GET_LOGS,\r\n  LOGS_ERROR,\r\n  SEARCH_LOGS,\r\n  SET_CURRENT,\r\n  SET_LOADING,\r\n  UPDATE_LOG,\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n  logs: null,\r\n  current: null,\r\n  loading: false,\r\n  error: null,\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_LOGS:\r\n      return {\r\n        ...state,\r\n        logs: action.payload,\r\n        loading: false,\r\n      };\r\n    case ADD_LOG:\r\n      return {\r\n        ...state,\r\n        logs: [...state.logs, action.payload],\r\n        loading: false,\r\n      };\r\n    case UPDATE_LOG:\r\n      return {\r\n        ...state,\r\n        logs: state.logs.map((log) =>\r\n          log.id === action.payload.id ? action.payload : log\r\n        ),\r\n      };\r\n    case SEARCH_LOGS:\r\n      return {\r\n        ...state,\r\n        logs: action.payload,\r\n      };\r\n    case DELETE_LOG:\r\n      return {\r\n        ...state,\r\n        logs: state.logs.filter((log) => log.id !== action.payload),\r\n        loading: false,\r\n      };\r\n    case SET_CURRENT:\r\n      return {\r\n        ...state,\r\n        current: action.payload,\r\n      };\r\n    case SET_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case LOGS_ERROR:\r\n      console.log(action.payload);\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  ADD_TECH,\r\n  GET_TECHS,\r\n  DELETE_TECH,\r\n  TECHS_ERROR,\r\n  SET_LOADING,\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n  techs: null,\r\n  error: null,\r\n  loading: false,\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_TECHS:\r\n      return {\r\n        ...state,\r\n        techs: action.payload,\r\n        loading: false,\r\n      };\r\n    case ADD_TECH:\r\n      return {\r\n        ...state,\r\n        techs: [...state.techs, action.payload],\r\n        loading: false,\r\n      };\r\n    case DELETE_TECH:\r\n      return {\r\n        ...state,\r\n        techs: state.techs.filter((tech) => tech.id !== action.payload),\r\n        loading: false,\r\n      };\r\n    case TECHS_ERROR:\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n        loading: false,\r\n      };\r\n    case SET_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport logReducer from './logReducer';\r\nimport techReducer from './techReducer';\r\n\r\nexport default combineReducers({\r\n  log: logReducer,\r\n  tech: techReducer,\r\n});\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import {\r\n  GET_LOGS,\r\n  DELETE_LOG,\r\n  SET_CURRENT,\r\n  UPDATE_LOG,\r\n  ADD_LOG,\r\n  SEARCH_LOGS,\r\n  SET_LOADING,\r\n  LOGS_ERROR,\r\n} from './types';\r\n\r\n// Get logs from the server\r\nexport const getLogs = () => async (dispatch) => {\r\n  try {\r\n    setLoading();\r\n    const response = await fetch(\r\n      'https://my-json-server.typicode.com/waranya-sun/json-server-db/logs'\r\n    );\r\n    const data = await response.json();\r\n    dispatch({\r\n      type: GET_LOGS,\r\n      payload: data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: LOGS_ERROR,\r\n      payload: err.response.statusText,\r\n    });\r\n  }\r\n};\r\n\r\n// Add new log\r\nexport const addLog = (log) => async (dispatch) => {\r\n  try {\r\n    setLoading();\r\n    const response = await fetch(\r\n      'https://my-json-server.typicode.com/waranya-sun/json-server-db/logs',\r\n      {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(log),\r\n      }\r\n    );\r\n    const data = await response.json();\r\n    dispatch({\r\n      type: ADD_LOG,\r\n      payload: data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: LOGS_ERROR,\r\n      payload: err.response.statusText,\r\n    });\r\n  }\r\n};\r\n\r\n// Update the log on server\r\nexport const updateLog = (udtLog) => async (dispatch) => {\r\n  try {\r\n    const response = await fetch(\r\n      `https://my-json-server.typicode.com/waranya-sun/json-server-db/logs/${udtLog.id}`,\r\n      {\r\n        method: 'PUT',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(udtLog),\r\n      }\r\n    );\r\n    const data = await response.json();\r\n    dispatch({\r\n      type: UPDATE_LOG,\r\n      payload: data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: LOGS_ERROR,\r\n      payload: err.response.statusText,\r\n    });\r\n  }\r\n};\r\n\r\n// Search server logs\r\nexport const searchLogs = (text) => async (dispatch) => {\r\n  try {\r\n    const response = await fetch(\r\n      `https://my-json-server.typicode.com/waranya-sun/json-server-db/logs?q=${text}`\r\n    );\r\n    const data = await response.json();\r\n    dispatch({\r\n      type: SEARCH_LOGS,\r\n      payload: data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: LOGS_ERROR,\r\n      payload: err.response.statusText,\r\n    });\r\n  }\r\n};\r\n\r\n// Delete the log from server\r\nexport const deleteLog = (id) => async (dispatch) => {\r\n  try {\r\n    setLoading();\r\n    await fetch(\r\n      `https://my-json-server.typicode.com/waranya-sun/json-server-db/logs/${id}`,\r\n      {\r\n        method: 'DELETE',\r\n      }\r\n    );\r\n    dispatch({\r\n      type: DELETE_LOG,\r\n      payload: id,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: LOGS_ERROR,\r\n      payload: err.response.statusText,\r\n    });\r\n  }\r\n};\r\n\r\n// Set current log\r\nexport const setCurrent = (log) => {\r\n  return {\r\n    type: SET_CURRENT,\r\n    payload: log,\r\n  };\r\n};\r\n\r\n// Set loading to true\r\nexport const setLoading = () => {\r\n  return {\r\n    type: SET_LOADING,\r\n  };\r\n};\r\n","import React, { useRef } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { searchLogs } from '../../actions/logActions';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst SearchBar = ({ searchLogs }) => {\r\n  const text = useRef('');\r\n\r\n  const onSearch = (e) => {\r\n    searchLogs(text.current.value);\r\n  };\r\n\r\n  return (\r\n    <nav style={{ marginBottom: '30px' }} className='#0d47a1 blue darken-4'>\r\n      <div className='nav-wrapper'>\r\n        <form>\r\n          <div className='input-field'>\r\n            <input\r\n              ref={text}\r\n              id='search'\r\n              type='search'\r\n              placeholder='Search Logs...'\r\n              onChange={onSearch}\r\n            />\r\n            <label className='label-icon' htmlFor='search'>\r\n              <i className='material-icons'>search</i>\r\n            </label>\r\n            <i className='material-icons'>close</i>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nSearchBar.propTypes = {\r\n  searchLogs: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { searchLogs })(SearchBar);\r\n","import React from 'react';\r\nimport Moment from 'react-moment';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { deleteLog, setCurrent } from '../../actions/logActions';\r\nimport M from 'materialize-css/dist/js/materialize.min.js';\r\n\r\nconst LogItem = ({ log, setCurrent, deleteLog }) => {\r\n  const onDelete = () => {\r\n    deleteLog(log.id);\r\n    M.toast({ html: 'Log Deleted' });\r\n  };\r\n\r\n  return (\r\n    <li className='collection-item'>\r\n      <div>\r\n        <a\r\n          href='#edit-log-modal'\r\n          className={`modal-trigger ${\r\n            log.attention ? 'red-text' : 'blue-text'\r\n          }`}\r\n          onClick={() => setCurrent(log)}\r\n        >\r\n          {log.message}\r\n        </a>\r\n        <br />\r\n        <span className='grey-text'>\r\n          <span className='black-text'>ID #{log.id}</span> last updated by{' '}\r\n          <span className='black-text'>{log.tech}</span> on{' '}\r\n          <Moment format='MMMM Do YYYY, h:mm:ss a'>{log.date}</Moment>\r\n        </span>\r\n        <a href='#!' className='secondary-content' onClick={onDelete}>\r\n          <i className='material-icons grey-text'>delete</i>\r\n        </a>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nLogItem.propTypes = {\r\n  log: PropTypes.object.isRequired,\r\n  setCurrent: PropTypes.func.isRequired,\r\n  deleteLog: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { setCurrent, deleteLog })(LogItem);\r\n","import React from 'react';\r\n\r\nconst Preloader = () => {\r\n  return (\r\n    <div class='preloader-wrapper small active' style={loadingStyle}>\r\n      <div class='spinner-layer spinner-green-only'>\r\n        <div class='circle-clipper left'>\r\n          <div class='circle'></div>\r\n        </div>\r\n        <div class='gap-patch'>\r\n          <div class='circle'></div>\r\n        </div>\r\n        <div class='circle-clipper right'>\r\n          <div class='circle'></div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst loadingStyle = {\r\n  position: 'absolute',\r\n  top: '50%',\r\n  left: '50%',\r\n  transform: 'translate(-50%, -50%)',\r\n};\r\n\r\nexport default Preloader;\r\n","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport LogItem from './LogItem';\r\nimport { getLogs } from '../../actions/logActions';\r\nimport Preloader from '../layout/Preloader';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Logs = ({ log: { logs, loading }, getLogs }) => {\r\n  useEffect(() => {\r\n    getLogs();\r\n  }, []);\r\n\r\n  if (loading || logs === null) {\r\n    return <Preloader />;\r\n  }\r\n\r\n  return (\r\n    <ul className='collection with-header'>\r\n      <li className='collection-header'>\r\n        <h4 className='center' style={headerStyle}>\r\n          System Logs\r\n        </h4>\r\n      </li>\r\n      {!loading && logs.length === 0 ? (\r\n        <p>No logs to show...</p>\r\n      ) : (\r\n        logs.map((log) => <LogItem key={log.id} log={log} />)\r\n      )}\r\n    </ul>\r\n  );\r\n};\r\n\r\nconst headerStyle = {\r\n  fontWeight: 'bold',\r\n  fontSize: '40px',\r\n  marginBottom: '35px',\r\n};\r\n\r\nLogs.propTypes = {\r\n  log: PropTypes.object.isRequired,\r\n  getLogs: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  log: state.log,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getLogs })(Logs);\r\n","import React from 'react';\r\n\r\nconst AddBtn = () => {\r\n  return (\r\n    <div className='fixed-action-btn'>\r\n      <a\r\n        href='#add-log-modal'\r\n        className='btn-floating btn-large #0d47a1 blue darken-4 modal-trigger'\r\n      >\r\n        <i className='large material-icons'>add</i>\r\n      </a>\r\n      <ul>\r\n        <li>\r\n          <a href='#tech-list-modal' className='btn-floating red modal-trigger'>\r\n            <i className='material-icons orange'>face</i>\r\n          </a>\r\n        </li>\r\n        <li>\r\n          <a\r\n            href='#add-tech-modal'\r\n            className='btn-floating green modal-trigger'\r\n          >\r\n            <i className='material-icons green'>person_add</i>\r\n          </a>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddBtn;\r\n","import {\r\n  GET_TECHS,\r\n  ADD_TECH,\r\n  DELETE_TECH,\r\n  SET_LOADING,\r\n  TECHS_ERROR,\r\n} from '../actions/types';\r\n\r\n// Get techs from server\r\nexport const getTechs = () => async (dispatch) => {\r\n  try {\r\n    setLoading();\r\n    const response = await fetch(\r\n      'https://my-json-server.typicode.com/waranya-sun/json-server-db/techs'\r\n    );\r\n    const data = await response.json();\r\n    dispatch({\r\n      type: GET_TECHS,\r\n      payload: data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: TECHS_ERROR,\r\n      payload: err.response.statusText,\r\n    });\r\n  }\r\n};\r\n\r\n// Add technician to server\r\nexport const addTech = (newTech) => async (dispatch) => {\r\n  try {\r\n    const response = await fetch(\r\n      'https://my-json-server.typicode.com/waranya-sun/json-server-db/techs',\r\n      {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(newTech),\r\n      }\r\n    );\r\n    const data = await response.json();\r\n    dispatch({\r\n      type: ADD_TECH,\r\n      payload: data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: TECHS_ERROR,\r\n      payload: err.response.statusText,\r\n    });\r\n  }\r\n};\r\n\r\n// Delete technician from server\r\nexport const deleteTech = (tId) => async (dispatch) => {\r\n  try {\r\n    await fetch(\r\n      `https://my-json-server.typicode.com/waranya-sun/json-server-db/techs/${tId}`,\r\n      {\r\n        method: 'DELETE',\r\n      }\r\n    );\r\n    dispatch({\r\n      type: DELETE_TECH,\r\n      payload: tId,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: TECHS_ERROR,\r\n      payload: err.response.statusText,\r\n    });\r\n  }\r\n};\r\n\r\n// Set loading to true\r\nexport const setLoading = () => {\r\n  return {\r\n    type: SET_LOADING,\r\n  };\r\n};\r\n","import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { getTechs } from '../../actions/techActions';\r\nimport { connect } from 'react-redux';\r\n\r\nconst TechSelectOptions = ({ tech: { techs, loading }, getTechs }) => {\r\n  useEffect(() => {\r\n    getTechs();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {!loading &&\r\n        techs !== null &&\r\n        techs.map((tech) => (\r\n          <option key={tech.id} value={`${tech.firstName} ${tech.lastName}`}>\r\n            {tech.firstName} {tech.lastName}\r\n          </option>\r\n        ))}\r\n    </>\r\n  );\r\n};\r\n\r\nTechSelectOptions.propTypes = {\r\n  tech: PropTypes.object.isRequired,\r\n  getTechs: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  tech: state.tech,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getTechs })(TechSelectOptions);\r\n","import React, { useState } from 'react';\r\nimport TechSelectOptions from '../techs/TechSelectOptions';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { addLog } from '../../actions/logActions';\r\nimport M from 'materialize-css/dist/js/materialize.min.js';\r\n\r\nconst AddLogModal = ({ addLog }) => {\r\n  const [message, setMessage] = useState('');\r\n  const [tech, setTech] = useState('');\r\n  const [attention, setAttention] = useState(false);\r\n\r\n  const onSubmit = () => {\r\n    if (message === '' || tech === '') {\r\n      M.toast({ html: 'Please enter a message and technician' });\r\n    } else {\r\n      const newLog = {\r\n        message,\r\n        attention,\r\n        tech,\r\n        date: new Date(),\r\n      };\r\n\r\n      addLog(newLog);\r\n      M.toast({ html: `Log added by ${tech}` });\r\n\r\n      //Clear Fields\r\n      setMessage('');\r\n      setTech('');\r\n      setAttention(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div id='add-log-modal' className='modal' style={modalStyle}>\r\n      <div className='modal-content'>\r\n        <h4>Add System Log</h4>\r\n        <div className='row'>\r\n          <div className='input-field'>\r\n            <input\r\n              type='text'\r\n              name='message'\r\n              value={message}\r\n              onChange={(e) => setMessage(e.target.value)}\r\n            />\r\n            <label htmlFor='message' className='active'>\r\n              Log Message\r\n            </label>\r\n          </div>\r\n        </div>\r\n\r\n        <div className='row'>\r\n          <div className='input-field'>\r\n            <select\r\n              name='tech'\r\n              value={tech}\r\n              className='browser-default'\r\n              onChange={(e) => setTech(e.target.value)}\r\n            >\r\n              <option value='' disabled>\r\n                Select Technician\r\n              </option>\r\n              <TechSelectOptions />\r\n            </select>\r\n          </div>\r\n        </div>\r\n\r\n        <div className='row'>\r\n          <div className='input-field'>\r\n            <p>\r\n              <label>\r\n                <input\r\n                  type='checkbox'\r\n                  className='filled-in'\r\n                  checked={attention}\r\n                  value={attention}\r\n                  onChange={(e) => setAttention(!attention)}\r\n                />\r\n                <span>Need Attention</span>\r\n              </label>\r\n            </p>\r\n          </div>\r\n        </div>\r\n\r\n        <div className='modal-footer'>\r\n          <a\r\n            href='#!'\r\n            onClick={onSubmit}\r\n            className='modal-close waves-effect waves-green btn'\r\n          >\r\n            Add Log\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst modalStyle = {\r\n  width: '75%',\r\n  height: '75%',\r\n};\r\n\r\nAddLogModal.propTypes = {\r\n  addLog: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { addLog })(AddLogModal);\r\n","import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport TechSelectOptions from '../techs/TechSelectOptions';\r\nimport { updateLog } from '../../actions/logActions';\r\nimport M from 'materialize-css/dist/js/materialize.min.js';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst EditLogModal = ({ current, updateLog }) => {\r\n  const [message, setMessage] = useState('');\r\n  const [tech, setTech] = useState('');\r\n  const [attention, setAttention] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (current) {\r\n      setMessage(current.message);\r\n      setTech(current.tech);\r\n      setAttention(current.attention);\r\n    }\r\n  }, [current]);\r\n\r\n  const onSubmit = () => {\r\n    if (message === '' || tech === '') {\r\n      M.toast({ html: 'Please enter a message and tech' });\r\n    } else {\r\n      const udtLog = {\r\n        id: current.id,\r\n        message,\r\n        attention,\r\n        tech,\r\n        date: new Date(),\r\n      };\r\n\r\n      updateLog(udtLog);\r\n      M.toast({ html: `Log updated by ${tech}` });\r\n\r\n      //Clear Fields\r\n      setMessage('');\r\n      setTech('');\r\n      setAttention(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div id='edit-log-modal' className='modal' style={modalStyle}>\r\n      <div className='modal-content'>\r\n        <h4>Update System Log</h4>\r\n        <div className='row'>\r\n          <div className='input-field'>\r\n            <input\r\n              type='text'\r\n              name='message'\r\n              value={message}\r\n              onChange={(e) => setMessage(e.target.value)}\r\n            />\r\n            <label htmlFor='message' className='active'>\r\n              {/* Log Message */}\r\n            </label>\r\n          </div>\r\n        </div>\r\n\r\n        <div className='row'>\r\n          <div className='input-field'>\r\n            <select\r\n              name='tech'\r\n              value={tech}\r\n              className='browser-default'\r\n              onChange={(e) => setTech(e.target.value)}\r\n            >\r\n              <option value='' disabled>\r\n                Select Technician\r\n              </option>\r\n              <TechSelectOptions />\r\n            </select>\r\n          </div>\r\n        </div>\r\n\r\n        <div className='row'>\r\n          <div className='input-field'>\r\n            <p>\r\n              <label>\r\n                <input\r\n                  type='checkbox'\r\n                  className='filled-in'\r\n                  checked={attention}\r\n                  value={attention}\r\n                  onChange={(e) => setAttention(!attention)}\r\n                />\r\n                <span>Needs Attention</span>\r\n              </label>\r\n            </p>\r\n          </div>\r\n        </div>\r\n\r\n        <div className='modal-footer'>\r\n          <a\r\n            href='#!'\r\n            onClick={onSubmit}\r\n            className='modal-close waves-effect waves-green btn'\r\n          >\r\n            Update Log\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst modalStyle = {\r\n  width: '75%',\r\n  height: '75%',\r\n};\r\n\r\nEditLogModal.propTypes = {\r\n  current: PropTypes.object,\r\n  updateLog: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  current: state.log.current,\r\n});\r\n\r\nexport default connect(mapStateToProps, { updateLog })(EditLogModal);\r\n","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addTech } from '../../actions/techActions';\r\nimport PropTypes from 'prop-types';\r\nimport M from 'materialize-css/dist/js/materialize.min.js';\r\n\r\nconst AddTechModal = ({ addTech }) => {\r\n  const [firstName, setFirstName] = useState('');\r\n  const [lastName, setLastName] = useState('');\r\n\r\n  const onSubmit = () => {\r\n    if (firstName === '' || lastName === '') {\r\n      M.toast({ html: 'Please enter the first and last name' });\r\n    } else {\r\n      const newTech = {\r\n        firstName,\r\n        lastName,\r\n      };\r\n\r\n      addTech(newTech);\r\n      M.toast({ html: `${firstName} ${lastName} was added as a technician` });\r\n\r\n      //Clear fields\r\n      setFirstName('');\r\n      setLastName('');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div id='add-tech-modal' className='modal'>\r\n      <div className='modal-content'>\r\n        <h4>Add New Technician</h4>\r\n        <div className='row'>\r\n          <div className='input-field'>\r\n            <input\r\n              type='text'\r\n              name='firstName'\r\n              value={firstName}\r\n              onChange={(e) => setFirstName(e.target.value)}\r\n            />\r\n            <label htmlFor='firstName' className='active'>\r\n              First Name\r\n            </label>\r\n          </div>\r\n        </div>\r\n\r\n        <div className='row'>\r\n          <div className='input-field'>\r\n            <input\r\n              type='text'\r\n              name='lastName'\r\n              value={lastName}\r\n              onChange={(e) => setLastName(e.target.value)}\r\n            />\r\n            <label htmlFor='lastName' className='active'>\r\n              Last Name\r\n            </label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className='modal-footer'>\r\n        <a\r\n          href='#!'\r\n          onClick={onSubmit}\r\n          className='modal-close waves-effect waves-green btn'\r\n        >\r\n          Add Tech\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nAddTechModal.propType = {\r\n  addTect: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { addTech })(AddTechModal);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { deleteTech } from '../../actions/techActions';\r\nimport PropTypes from 'prop-types';\r\nimport M from 'materialize-css/dist/js/materialize.min.js';\r\n\r\nconst TechItem = ({ tech, deleteTech }) => {\r\n  const onDelete = () => {\r\n    deleteTech(tech.id);\r\n    M.toast({ html: 'Technician deleted' });\r\n  };\r\n\r\n  return (\r\n    <li className='collection-item'>\r\n      <div>\r\n        {tech.firstName} {tech.lastName}\r\n        <a href='#!' className='secondary-content' onClick={onDelete}>\r\n          <i className='material-icons'>delete</i>\r\n        </a>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nTechItem.propTypes = {\r\n  tech: PropTypes.object.isRequired,\r\n  deleteTech: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { deleteTech })(TechItem);\r\n","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport TechItem from './TechItem';\r\nimport { getTechs } from '../../actions/techActions';\r\n\r\nconst TechListModal = ({ tech: { techs, loading }, getTechs }) => {\r\n  useEffect(() => {\r\n    getTechs();\r\n  }, []);\r\n\r\n  return (\r\n    <div id='tech-list-modal' className='modal'>\r\n      <div className='modal-content'>\r\n        <h4>Technician List</h4>\r\n        <ul className='collection'>\r\n          {!loading &&\r\n            techs !== null &&\r\n            techs.map((tech) => <TechItem key={tech.id} tech={tech} />)}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nTechListModal.propTypes = {\r\n  tech: PropTypes.object.isRequired,\r\n  getTechs: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  tech: state.tech,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getTechs })(TechListModal);\r\n","import { useEffect } from 'react';\nimport './App.css';\nimport 'materialize-css/dist/css/materialize.min.css';\nimport M from 'materialize-css/dist/js/materialize.min.js';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport SearchBar from './components/layout/SearchBar';\nimport Logs from './components/logs/Logs';\nimport AddBtn from './components/layout/AddBtn';\nimport AddLogModal from './components/logs/AddLogModal';\nimport EditLogModal from './components/logs/EditLogModal';\nimport AddTechModal from './components/techs/AddTechModal';\nimport TechListModal from './components/techs/TechListModal';\n\nconst App = () => {\n  useEffect(() => {\n    //Init Materialize JS\n    M.AutoInit();\n  });\n\n  return (\n    <Provider store={store}>\n      <>\n        <SearchBar />\n        <div className='container'>\n          <AddBtn />\n          <AddLogModal />\n          <EditLogModal />\n          <AddTechModal />\n          <TechListModal />\n          <Logs />\n        </div>\n      </>\n    </Provider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}